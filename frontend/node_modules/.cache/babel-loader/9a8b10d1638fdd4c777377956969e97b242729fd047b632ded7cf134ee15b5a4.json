{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, Fragment as _Fragment } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"welcome-message\"\n};\nvar _hoisted_2 = {\n  \"class\": \"login\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"form-group\"\n};\nvar _hoisted_4 = {\n  key: 1,\n  \"class\": \"form-group\"\n};\nvar _hoisted_5 = {\n  key: 2,\n  \"class\": \"form-group\"\n};\nvar _hoisted_6 = {\n  key: 3,\n  \"class\": \"form-group\"\n};\nvar _hoisted_7 = {\n  key: 4,\n  \"class\": \"form-group\"\n};\nvar _hoisted_8 = {\n  key: 5,\n  \"class\": \"form-group\"\n};\nvar _hoisted_9 = {\n  \"class\": \"button-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.welcomeText), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString($data.isLoginMode ? '登入' : '注册'), 1 /* TEXT */), _createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers(function () {\n      return $options.submitForm && $options.submitForm.apply($options, arguments);\n    }, [\"prevent\"]))\n  }, [_createCommentVNode(\" 登录模式只显示邮箱和密码 \"), $data.isLoginMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    \"for\": \"email\"\n  }, \"邮箱：\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.email = $event;\n    }),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])])) : _createCommentVNode(\"v-if\", true), $data.isLoginMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    \"for\": \"password\"\n  }, \"密码：\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.password = $event;\n    }),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 注册模式显示所有字段 \"), !$data.isLoginMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    \"for\": \"username\"\n  }, \"用户名：\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $data.username = $event;\n    }),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])])) : _createCommentVNode(\"v-if\", true), !$data.isLoginMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    \"for\": \"title\"\n  }, \"称呼：\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return $data.title = $event;\n    }),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]])])) : _createCommentVNode(\"v-if\", true), !$data.isLoginMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", {\n    \"for\": \"email\"\n  }, \"邮箱：\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n      return $data.email = $event;\n    }),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])])) : _createCommentVNode(\"v-if\", true), !$data.isLoginMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_cache[16] || (_cache[16] = _createElementVNode(\"label\", {\n    \"for\": \"password\"\n  }, \"密码：\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n      return $data.password = $event;\n    }),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])])) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */), _createCommentVNode(\" 按钮组 \"), _createElementVNode(\"div\", _hoisted_9, [$data.isLoginMode ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    \"class\": \"submit-button\",\n    onClick: _cache[7] || (_cache[7] = function () {\n      return $options.login && $options.login.apply($options, arguments);\n    })\n  }, \"登录\")) : _createCommentVNode(\"v-if\", true), $data.isLoginMode ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    \"class\": \"register-button\",\n    onClick: _cache[8] || (_cache[8] = function () {\n      return $options.switchToRegister && $options.switchToRegister.apply($options, arguments);\n    })\n  }, \"注册\")) : _createCommentVNode(\"v-if\", true), !$data.isLoginMode ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    \"class\": \"submit-button\",\n    onClick: _cache[9] || (_cache[9] = function () {\n      return $options.register && $options.register.apply($options, arguments);\n    })\n  }, \"提交注册\")) : _createCommentVNode(\"v-if\", true), !$data.isLoginMode ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 3,\n    \"class\": \"back-button\",\n    onClick: _cache[10] || (_cache[10] = function () {\n      return $options.switchToLogin && $options.switchToLogin.apply($options, arguments);\n    })\n  }, \"返回登录\")) : _createCommentVNode(\"v-if\", true)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_toDisplayString","$data","welcomeText","_hoisted_2","isLoginMode","onSubmit","_cache","_withModifiers","$options","submitForm","apply","arguments","_createCommentVNode","_createElementBlock","_hoisted_3","type","email","$event","required","_hoisted_4","password","_hoisted_5","username","_hoisted_6","title","_hoisted_7","_hoisted_8","_hoisted_9","onClick","login","switchToRegister","register","switchToLogin"],"sources":["/Users/lingl/Desktop/java_proj/movie_night/MovieNight/frontend/src/views/LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"welcome-message\">\r\n    <h1>{{ welcomeText }}</h1>\r\n  </div>\r\n  <div class=\"login\">\r\n    <h2>{{ isLoginMode ? '登入' : '注册' }}</h2>\r\n    <form @submit.prevent=\"submitForm\">\r\n      <!-- 登录模式只显示邮箱和密码 -->\r\n      <div v-if=\"isLoginMode\" class=\"form-group\">\r\n        <label for=\"email\">邮箱：</label>\r\n        <input type=\"email\" v-model=\"email\" required>\r\n      </div>\r\n      <div v-if=\"isLoginMode\" class=\"form-group\">\r\n        <label for=\"password\">密码：</label>\r\n        <input type=\"password\" v-model=\"password\" required>\r\n      </div>\r\n\r\n      <!-- 注册模式显示所有字段 -->\r\n      <div v-if=\"!isLoginMode\" class=\"form-group\">\r\n        <label for=\"username\">用户名：</label>\r\n        <input type=\"text\" v-model=\"username\" required>\r\n      </div>\r\n      <div v-if=\"!isLoginMode\" class=\"form-group\">\r\n        <label for=\"title\">称呼：</label>\r\n        <input type=\"text\" v-model=\"title\" required>\r\n      </div>\r\n      <div v-if=\"!isLoginMode\" class=\"form-group\">\r\n        <label for=\"email\">邮箱：</label>\r\n        <input type=\"email\" v-model=\"email\" required>\r\n      </div>\r\n      <div v-if=\"!isLoginMode\" class=\"form-group\">\r\n        <label for=\"password\">密码：</label>\r\n        <input type=\"password\" v-model=\"password\" required>\r\n      </div>\r\n    </form>\r\n\r\n    <!-- 按钮组 -->\r\n    <div class=\"button-group\">\r\n      <button v-if=\"isLoginMode\" class=\"submit-button\" @click=\"login\">登录</button>\r\n      <button v-if=\"isLoginMode\" class=\"register-button\" @click=\"switchToRegister\">注册</button>\r\n      <button v-if=\"!isLoginMode\" class=\"submit-button\" @click=\"register\">提交注册</button>\r\n      <button v-if=\"!isLoginMode\" class=\"back-button\" @click=\"switchToLogin\">返回登录</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {login, register} from \"@/services/api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isLoginMode: true, // 默认为登录模式\r\n      username: '',\r\n      title: '',\r\n      email: '',\r\n      password: '',\r\n      welcomeText: 'Enjoy your movie night!'\r\n    }\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        const response = await login(this.email,this.password)\r\n\r\n        if (response.data.code === 1) {\r\n          // 保存用户信息到本地存储\r\n          const userInfo = response.data.data;\r\n          localStorage.setItem('userInfo', JSON.stringify(userInfo));\r\n\r\n          this.$router.push({ name: 'Home' })\r\n        } else {\r\n          alert('登录失败: ' + response.data.msg)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n        alert('出错了！请重试~')\r\n      }\r\n    },\r\n    async register() {\r\n      if (!this.username || !this.title || !this.email || !this.password) {\r\n        alert('所有信息都必须填写噢~');\r\n        return;\r\n      }\r\n      try {\r\n        const response = await register(this.nickname,this.title,this.email,this.password)\r\n        if (response.data.code === 1) {\r\n          alert('注册成功！请登录');\r\n          this.switchToLogin();\r\n          // 清空表单\r\n          this.username = '';\r\n          this.title = '';\r\n          this.password = '';\r\n        } else {\r\n          alert('注册失败: ' + response.data.msg)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n        alert('出错了！请重试~')\r\n      }\r\n    },\r\n    switchToRegister() {\r\n      this.isLoginMode = false;\r\n      this.welcomeText = 'Enjoy your movie night!';\r\n    },\r\n    switchToLogin() {\r\n      this.isLoginMode = true;\r\n      this.welcomeText = 'Enjoy your movie night!';\r\n      // 清空表单\r\n      this.username = '';\r\n      this.title = '';\r\n      this.password = '';\r\n    },\r\n    submitForm() {\r\n      // 处理表单提交（防止回车键提交）\r\n      return false;\r\n    },\r\n    handleKeydown(event) {\r\n      if (event.key === 'Enter') {\r\n        if (this.isLoginMode) {\r\n          this.login();\r\n        } else {\r\n          this.register();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');\r\n\r\n.welcome-message {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.welcome-message h1 {\r\n  margin-bottom: 50px;\r\n  display: inline-block;\r\n  overflow: hidden;\r\n  border-right: .15em solid #b06767;\r\n  white-space: nowrap;\r\n  max-width: 26ch;\r\n  letter-spacing: .15em;\r\n  animation: typing 3.5s steps(40, end), blink-caret .75s step-end infinite;\r\n  font-family: 'Technic';\r\n}\r\n\r\n@keyframes typing {\r\n  from { width: 0 }\r\n  to { width: 100% }\r\n}\r\n\r\n@keyframes blink-caret {\r\n  from, to { border-color: transparent }\r\n  50% { border-color: #b06767; }\r\n}\r\n\r\n.login {\r\n  max-width: 350px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  flex: 1;\r\n  font-weight: bold;\r\n  text-align: center;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"email\"],\r\ninput[type=\"password\"] {\r\n  flex: 2;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n}\r\n\r\n.submit-button, .register-button, .back-button {\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.submit-button {\r\n  background-color: #b79292;\r\n  color: white;\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #883333;\r\n}\r\n\r\n.register-button {\r\n  background-color: #ccc;\r\n  color: white;\r\n  flex: 1;\r\n}\r\n\r\n.register-button:hover {\r\n  background-color: #aaaaaa;\r\n}\r\n\r\n.back-button {\r\n  background-color: #cccccc;\r\n  color: #333333;\r\n  flex: 1;\r\n  margin-left: 10px;\r\n}\r\n\r\n.back-button:hover {\r\n  background-color: #aaaaaa;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}