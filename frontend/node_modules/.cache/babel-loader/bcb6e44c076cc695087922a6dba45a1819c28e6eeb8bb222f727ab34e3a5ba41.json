{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n// src/router/index.js\nimport { createRouter, createWebHistory } from 'vue-router';\nimport LoginView from '../views/LoginView.vue';\nimport HomeView from '../views/HomeView.vue';\nimport TagsSearchView from '@/views/TagsSearchView.vue';\nimport SearchResultsView from '@/views/SearchResultsView.vue';\nimport MovieDetailView from '@/views/MovieDetailView.vue';\nvar routes = [{\n  path: '/',\n  name: 'Login',\n  component: LoginView\n}, {\n  path: '/home',\n  name: 'Home',\n  component: HomeView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/tags-search',\n  name: 'TagsSearch',\n  component: TagsSearchView\n}, {\n  path: '/search-results',\n  name: 'SearchResults',\n  component: SearchResultsView,\n  props: function props(route) {\n    return {\n      movies: route.params.movies\n    };\n  }\n}, {\n  path: '/movie/:_id',\n  name: 'MovieDetail',\n  component: MovieDetailView,\n  props: true\n}];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes\n});\nrouter.beforeEach(function (to, from, next) {\n  // 检查哪些路由需要认证\n  var protectedRoutes = ['/{_id}', '/{id}/watch-together', '/{id}/comment', '/{id}/rate'];\n\n  // 检查用户是否已登录（从 localStorage 判断）\n  var isAuthenticated = localStorage.getItem('userInfo') !== null;\n  if (protectedRoutes.includes(to.path) && !isAuthenticated) {\n    // 保存目标路由，登录后重定向\n    next({\n      name: 'Login',\n      query: {\n        redirect: to.fullPath\n      }\n    });\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginView","HomeView","TagsSearchView","SearchResultsView","MovieDetailView","routes","path","name","component","meta","requiresAuth","props","route","movies","params","router","history","process","env","BASE_URL","beforeEach","to","from","next","protectedRoutes","isAuthenticated","localStorage","getItem","includes","query","redirect","fullPath"],"sources":["/Users/lingl/Desktop/java_proj/movie_night/MovieNight/frontend/src/router/index.js"],"sourcesContent":["// src/router/index.js\nimport { createRouter, createWebHistory } from 'vue-router'\nimport LoginView from '../views/LoginView.vue'\nimport HomeView from '../views/HomeView.vue'\nimport TagsSearchView from '@/views/TagsSearchView.vue'\nimport SearchResultsView from '@/views/SearchResultsView.vue'\nimport MovieDetailView from '@/views/MovieDetailView.vue';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Login',\n    component: LoginView\n  },\n  {\n    path: '/home',\n    name: 'Home',\n    component: HomeView,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/tags-search',\n    name: 'TagsSearch',\n    component: TagsSearchView\n  },\n  {\n    path: '/search-results',\n    name: 'SearchResults',\n    component: SearchResultsView,\n    props: route => ({ movies: route.params.movies })\n  },\n  {\n    path: '/movie/:_id',\n    name: 'MovieDetail',\n    component: MovieDetailView,\n    props: true\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nrouter.beforeEach((to, from, next) => {\n  // 检查哪些路由需要认证\n  const protectedRoutes = [\n      '/{_id}',\n      '/{id}/watch-together',\n      '/{id}/comment',\n      '/{id}/rate'\n  ];\n\n  // 检查用户是否已登录（从 localStorage 判断）\n  const isAuthenticated = localStorage.getItem('userInfo') !== null;\n\n  if (protectedRoutes.includes(to.path) && !isAuthenticated) {\n    // 保存目标路由，登录后重定向\n    next({\n      name: 'Login',\n      query: { redirect: to.fullPath }\n    });\n  } else {\n    next();\n  }\n});\n\nexport default router"],"mappings":";AAAA;AACA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,iBAAiB,MAAM,+BAA+B;AAC7D,OAAOC,eAAe,MAAM,6BAA6B;AAEzD,IAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEP,QAAQ;EACnBQ,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEL,iBAAiB;EAC5BQ,KAAK,EAAE,SAAPA,KAAKA,CAAEC,KAAK;IAAA,OAAK;MAAEC,MAAM,EAAED,KAAK,CAACE,MAAM,CAACD;IAAO,CAAC;EAAA;AAClD,CAAC,EACD;EACEP,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEJ,eAAe;EAC1BO,KAAK,EAAE;AACT,CAAC,CACF;AAED,IAAMI,MAAM,GAAGjB,YAAY,CAAC;EAC1BkB,OAAO,EAAEjB,gBAAgB,CAACkB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/Cd,MAAM,EAANA;AACF,CAAC,CAAC;AAEFU,MAAM,CAACK,UAAU,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAK;EACpC;EACA,IAAMC,eAAe,GAAG,CACpB,QAAQ,EACR,sBAAsB,EACtB,eAAe,EACf,YAAY,CACf;;EAED;EACA,IAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,IAAI;EAEjE,IAAIH,eAAe,CAACI,QAAQ,CAACP,EAAE,CAACf,IAAI,CAAC,IAAI,CAACmB,eAAe,EAAE;IACzD;IACAF,IAAI,CAAC;MACHhB,IAAI,EAAE,OAAO;MACbsB,KAAK,EAAE;QAAEC,QAAQ,EAAET,EAAE,CAACU;MAAS;IACjC,CAAC,CAAC;EACJ,CAAC,MAAM;IACLR,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}