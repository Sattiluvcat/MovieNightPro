{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"tags-search\"\n};\nvar _hoisted_2 = {\n  \"class\": \"tags-container\"\n};\nvar _hoisted_3 = [\"onClick\"];\nvar _hoisted_4 = {\n  \"class\": \"languages-container\"\n};\nvar _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"选择分类或语言\", -1)), _createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"label\", null, \"分类\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tags, function (tag) {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: tag,\n      onClick: function onClick($event) {\n        return $options.toggleTag(tag);\n      },\n      \"class\": _normalizeClass({\n        selected: $data.selectedTags.includes(tag)\n      })\n    }, _toDisplayString(tag), 11, _hoisted_3);\n  }), 128))]), _cache[4] || (_cache[4] = _createElementVNode(\"hr\", {\n    \"class\": \"divider\"\n  }, null, -1)), _createElementVNode(\"div\", _hoisted_4, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", null, \"语言\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.languages, function (language) {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: language,\n      onClick: function onClick($event) {\n        return $options.toggleLanguage(language);\n      },\n      \"class\": _normalizeClass({\n        selected: $data.selectedLanguages.includes(language)\n      })\n    }, _toDisplayString(language), 11, _hoisted_5);\n  }), 128))]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.searchByTagsAndLanguages && $options.searchByTagsAndLanguages.apply($options, arguments);\n    }),\n    \"class\": \"search-button\"\n  }, \"搜索\")]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","tags","tag","key","onClick","$event","$options","toggleTag","_normalizeClass","selected","selectedTags","includes","_hoisted_3","_hoisted_4","languages","language","toggleLanguage","selectedLanguages","_hoisted_5","_cache","searchByTagsAndLanguages","apply","arguments"],"sources":["/Users/lingl/Desktop/java_proj/movie_night/MovieNight/frontend/src/views/TagsSearchView.vue"],"sourcesContent":["<template>\r\n  <div class=\"tags-search\">\r\n    <h2>选择分类或语言</h2>\r\n    <div class=\"tags-container\">\r\n      <label>分类</label>\r\n      <button v-for=\"tag in tags\" :key=\"tag\" @click=\"toggleTag(tag)\" :class=\"{ selected: selectedTags.includes(tag) }\">{{ tag }}</button>\r\n    </div>\r\n    <hr class=\"divider\">\r\n    <div class=\"languages-container\">\r\n      <label>语言</label>\r\n      <button v-for=\"language in languages\" :key=\"language\" @click=\"toggleLanguage(language)\"\r\n              :class=\"{ selected: selectedLanguages.includes(language) }\">{{ language }}</button>\r\n    </div>\r\n    <button @click=\"searchByTagsAndLanguages\" class=\"search-button\">搜索</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { searchByTags } from '@/services/api';\r\nimport {mapActions} from \"vuex\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      tags: ['剧情', '喜剧', '冒险', '动画', '奇幻', '爱情', '动作', '科幻', '家庭', '犯罪', '战争', '悬疑', '历史', '惊悚', '古装',\r\n        '传记', '歌舞', '纪录片', '音乐', '短片', '西部', '灾难', '武侠', '运动', '同性', '恐怖', '儿童', '情色'],\r\n      languages: ['英语', '汉语普通话', '日语', '法语', '西班牙语', '德语', '粤语', '俄语', '意大利语', '韩语', '印地语', '阿拉伯语',\r\n        '泰语', '拉丁语', '上海话', '瑞典语', '葡萄牙语', '波斯语', '辛达林语', '重庆话', '美国手语', '丹麦语', '荷兰语', '中国手语',\r\n        '土耳其语', '四川话', '山西话', '沪语', '挪威语', '唐山话', '手语', '克罗地亚语', '科萨语', '潮州话', '武汉话', '毛利语',\r\n        '芬兰语', '匈牙利语', '闽南语', '爱尔兰语', '苏格兰盖尔语', '多斯拉克语', '柏柏尔语', '日本手语', '意第绪语', '希腊语', '冰岛语',\r\n        '晋语', '南非荷兰语', '湖北话', '湖南话', '蒙古语', '捷克语', '爱沙尼亚语', '越南语', '武汉方言', '四川方言', '波尼语', '南京话',\r\n        '昆雅语', '古英语', '古代英语', '泰米尔语', '因纽特语', '塞尔维亚语', '斯瓦希里语', '祖鲁语', '山东方言', '夏威夷语', '乌尔都语',\r\n        '乌克兰语', '索马里语', '贵州方言', '印尼语', '阿姆哈拉语'],\r\n      selectedTags: [],\r\n      selectedLanguages: []\r\n    }\r\n  },\r\n  methods: {\r\n    toggleTag(tag) {\r\n      const index = this.selectedTags.indexOf(tag);\r\n      if (index > -1) {\r\n        this.selectedTags.splice(index, 1);\r\n      } else {\r\n        this.selectedTags.push(tag);\r\n      }\r\n    },\r\n    toggleLanguage(language) {\r\n      const index = this.selectedLanguages.indexOf(language);\r\n      if (index > -1) {\r\n        this.selectedLanguages.splice(index, 1);\r\n      } else {\r\n        this.selectedLanguages.push(language);\r\n      }\r\n    },\r\n    ...mapActions(['updateMovies']),\r\n    async searchByTagsAndLanguages() {\r\n      if (this.selectedTags.length === 0 && this.selectedLanguages.length === 0) {\r\n        alert('至少要选择一个标签噢');\r\n        return;\r\n      }\r\n      try {\r\n        // console.log(this.selectedTags, this.selectedLanguages);\r\n        const response = await searchByTags(this.selectedTags, this.selectedLanguages);\r\n        const movies = response.data.data; // Access the data property of the Result object\r\n        // console.log(movies);\r\n        this.updateMovies(movies);\r\n        this.$router.push({ name: 'SearchResults'});\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.tags-search {\r\n  text-align: center;\r\n  margin-top: 50px;\r\n}\r\n\r\n.tags-container, .languages-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\nbutton {\r\n  margin: 7px;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton.selected {\r\n  background-color: #b06767;\r\n  color: white;\r\n}\r\n\r\n.divider {\r\n  border: 0;\r\n  height: 1px;\r\n  background: #ccc;\r\n  margin: 20px 0;\r\n}\r\n\r\n.search-button {\r\n  width: 50%;\r\n  padding: 15px;\r\n  font-size: 18px;\r\n  background-color: #b79292;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.search-button:hover {\r\n  background-color: #883333;\r\n}\r\n</style>"],"mappings":";;;;EACO,SAAM;AAAa;;EAEjB,SAAM;AAAgB;;;EAKtB,SAAM;AAAqB;;;uBAPlCA,mBAAA,CAaM,OAbNC,UAaM,G,0BAZJC,mBAAA,CAAgB,YAAZ,SAAO,QACXA,mBAAA,CAGM,OAHNC,UAGM,G,0BAFJD,mBAAA,CAAiB,eAAV,IAAE,S,kBACTF,mBAAA,CAAmII,SAAA,QAAAC,WAAA,CAA7GC,KAAA,CAAAC,IAAI,YAAXC,GAAG;yBAAlBR,mBAAA,CAAmI;MAAtGS,GAAG,EAAED,GAAG;MAAGE,OAAK,WAALA,OAAKA,CAAAC,MAAA;QAAA,OAAEC,QAAA,CAAAC,SAAS,CAACL,GAAG;MAAA;MAAI,SAAKM,eAAA;QAAAC,QAAA,EAAcT,KAAA,CAAAU,YAAY,CAACC,QAAQ,CAACT,GAAG;MAAA;wBAAQA,GAAG,OAAAU,UAAA;yCAEzHhB,mBAAA,CAAoB;IAAhB,SAAM;EAAS,eACnBA,mBAAA,CAIM,OAJNiB,UAIM,G,0BAHJjB,mBAAA,CAAiB,eAAV,IAAE,S,kBACTF,mBAAA,CAC2FI,SAAA,QAAAC,WAAA,CADhEC,KAAA,CAAAc,SAAS,YAArBC,QAAQ;yBAAvBrB,mBAAA,CAC2F;MADpDS,GAAG,EAAEY,QAAQ;MAAGX,OAAK,WAALA,OAAKA,CAAAC,MAAA;QAAA,OAAEC,QAAA,CAAAU,cAAc,CAACD,QAAQ;MAAA;MAC5E,SAAKP,eAAA;QAAAC,QAAA,EAAcT,KAAA,CAAAiB,iBAAiB,CAACN,QAAQ,CAACI,QAAQ;MAAA;wBAAQA,QAAQ,OAAAG,UAAA;eAEjFtB,mBAAA,CAA2E;IAAlEQ,OAAK,EAAAe,MAAA,QAAAA,MAAA;MAAA,OAAEb,QAAA,CAAAc,wBAAA,IAAAd,QAAA,CAAAc,wBAAA,CAAAC,KAAA,CAAAf,QAAA,EAAAgB,SAAA,CAAwB;IAAA;IAAE,SAAM;KAAgB,IAAE,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}