{"ast":null,"code":"import \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"home\"\n};\nvar _hoisted_2 = {\n  \"class\": \"user-info\"\n};\nvar _hoisted_3 = {\n  \"class\": \"search-container\"\n};\nvar _hoisted_4 = {\n  \"class\": \"category-search-container\"\n};\nvar _hoisted_5 = {\n  \"class\": \"recommendation-container\"\n};\nvar _hoisted_6 = {\n  \"class\": \"recommendation-column left-column\"\n};\nvar _hoisted_7 = {\n  \"class\": \"top-list-container\"\n};\nvar _hoisted_8 = [\"onClick\"];\nvar _hoisted_9 = {\n  \"class\": \"rank\"\n};\nvar _hoisted_10 = {\n  \"class\": \"movie-info\"\n};\nvar _hoisted_11 = {\n  \"class\": \"movie-title-small\"\n};\nvar _hoisted_12 = {\n  \"class\": \"movie-tags-small\"\n};\nvar _hoisted_13 = {\n  \"class\": \"recommendation-column main-recommendation\"\n};\nvar _hoisted_14 = {\n  \"class\": \"movie-overview-container\"\n};\nvar _hoisted_15 = [\"onClick\"];\nvar _hoisted_16 = {\n  \"class\": \"movie-header\"\n};\nvar _hoisted_17 = {\n  \"class\": \"movie-title\"\n};\nvar _hoisted_18 = {\n  \"class\": \"movie-score\"\n};\nvar _hoisted_19 = {\n  \"class\": \"movie-details\"\n};\nvar _hoisted_20 = {\n  \"class\": \"left-info\"\n};\nvar _hoisted_21 = {\n  \"class\": \"movie-actors\"\n};\nvar _hoisted_22 = {\n  \"class\": \"movie-tags\"\n};\nvar _hoisted_23 = {\n  \"class\": \"movie-languages\"\n};\nvar _hoisted_24 = {\n  \"class\": \"right-info\"\n};\nvar _hoisted_25 = {\n  \"class\": \"movie-release\"\n};\nvar _hoisted_26 = {\n  \"class\": \"recommendation-column right-column\"\n};\nvar _hoisted_27 = {\n  \"class\": \"top-list-container\"\n};\nvar _hoisted_28 = [\"onClick\"];\nvar _hoisted_29 = {\n  \"class\": \"rank\"\n};\nvar _hoisted_30 = {\n  \"class\": \"movie-info\"\n};\nvar _hoisted_31 = {\n  \"class\": \"movie-title-small\"\n};\nvar _hoisted_32 = {\n  \"class\": \"movie-tags-small\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, \"Enjoy your movie night, \" + _toDisplayString($data.userTitle + \" \" + $data.userName + \" 😺\"), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.logout && $options.logout.apply($options, arguments);\n    }),\n    \"class\": \"logout-button\"\n  }, \"登出\")]), _cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n    \"class\": \"typing-effect\"\n  }, [_createElementVNode(\"p\", {\n    \"class\": \"typing-text\"\n  }, \"Select one for movie night\")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.searchKeyword = $event;\n    }),\n    onKeydown: _cache[2] || (_cache[2] = function () {\n      return $options.handleKeydown && $options.handleKeydown.apply($options, arguments);\n    }),\n    placeholder: \"输入电影名 / 导演 / 演员精确搜索️🙂 或者 输入电影描述模糊搜索😶‍🌫\",\n    \"class\": \"search-box\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.searchKeyword]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = function () {\n      return $options.searchByKeyword && $options.searchByKeyword.apply($options, arguments);\n    }),\n    \"class\": \"search-button\"\n  }, \"精确搜索\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = function () {\n      return $options.fuzzySearch && $options.fuzzySearch.apply($options, arguments);\n    }),\n    \"class\": \"fuzzy-search-button\"\n  }, \"模糊搜索\")]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = function () {\n      return $options.fetchAllMovies && $options.fetchAllMovies.apply($options, arguments);\n    }),\n    \"class\": \"view-all-button\"\n  }, \"查看全部电影😎\"), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = function () {\n      return $options.goToTagsSearch && $options.goToTagsSearch.apply($options, arguments);\n    }),\n    \"class\": \"category-search-button\"\n  }, \"通过标签搜索😎\")]), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" 左侧：热度排行榜 (20%宽度) \"), _createElementVNode(\"div\", _hoisted_6, [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    \"class\": \"list-header\"\n  }, [_createElementVNode(\"h3\", null, \"热度排行榜🔥\"), _createElementVNode(\"hr\", {\n    \"class\": \"header-line\"\n  })], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.mostViewMovies, function (movie, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'mostview-' + index,\n      \"class\": \"top-list-item\",\n      onClick: function onClick($event) {\n        return $options.goToMovieDetail(movie._id);\n      }\n    }, [_createElementVNode(\"span\", _hoisted_9, _toDisplayString(index + 1) + \".\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"p\", _hoisted_11, _toDisplayString(movie.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_12, \"标签: \" + _toDisplayString(movie.tags.slice(0, 2).join(', ')), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 中间：推荐电影 \"), _createElementVNode(\"div\", _hoisted_13, [_cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    \"class\": \"recommendation-header\"\n  }, [_createElementVNode(\"p\", {\n    \"class\": \"header-text\"\n  }, \"推荐电影\"), _createElementVNode(\"hr\", {\n    \"class\": \"header-line\"\n  })], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.movies, function (movie) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: movie._id,\n      \"class\": \"movie-item\",\n      onClick: function onClick($event) {\n        return $options.goToMovieDetail(movie._id);\n      }\n    }, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"h2\", _hoisted_17, _toDisplayString(movie.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_18, \"评分: \" + _toDisplayString(movie.star_mine) + \" / 10\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"p\", _hoisted_21, \"演员: \" + _toDisplayString(movie.actor_actresses.join(', ')), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_22, \"标签: \" + _toDisplayString(movie.tags.join(', ')), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_23, \"语言: \" + _toDisplayString(movie.languages.join(', ')), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"p\", _hoisted_25, \"上映时间: \" + _toDisplayString(movie.release_time), 1 /* TEXT */)])])], 8 /* PROPS */, _hoisted_15);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 右侧：每日推荐 \"), _createElementVNode(\"div\", _hoisted_26, [_cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    \"class\": \"list-header\"\n  }, [_createElementVNode(\"h3\", null, \"每日推荐✨\"), _createElementVNode(\"hr\", {\n    \"class\": \"header-line\"\n  })], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_27, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dailyRecommendMovies, function (movie, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'daily-' + index,\n      \"class\": \"top-list-item\",\n      onClick: function onClick($event) {\n        return $options.goToMovieDetail(movie._id);\n      }\n    }, [_createElementVNode(\"span\", _hoisted_29, _toDisplayString(index + 1) + \".\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"p\", _hoisted_31, _toDisplayString(movie.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_32, \"标签: \" + _toDisplayString(movie.tags.slice(0, 2).join(', ')), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_28);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$data","userTitle","userName","onClick","_cache","$options","logout","apply","arguments","_hoisted_3","type","searchKeyword","$event","onKeydown","handleKeydown","placeholder","searchByKeyword","fuzzySearch","_hoisted_4","fetchAllMovies","goToTagsSearch","_hoisted_5","_createCommentVNode","_hoisted_6","_hoisted_7","_Fragment","_renderList","mostViewMovies","movie","index","key","goToMovieDetail","_id","_hoisted_9","_hoisted_10","_hoisted_11","title","_hoisted_12","tags","slice","join","_hoisted_13","_hoisted_14","movies","_hoisted_16","_hoisted_17","_hoisted_18","star_mine","_hoisted_19","_hoisted_20","_hoisted_21","actor_actresses","_hoisted_22","_hoisted_23","languages","_hoisted_24","_hoisted_25","release_time","_hoisted_26","_hoisted_27","dailyRecommendMovies","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32"],"sources":["/Users/lingl/Desktop/java_proj/movie_night/MovieNight/frontend/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"user-info\">\n      <span>Enjoy your movie night, {{ userTitle+\" \"+userName+ \" 😺\" }}</span>\n      <button @click=\"logout\" class=\"logout-button\">登出</button>\n    </div>\n    <div class=\"typing-effect\">\n      <p class=\"typing-text\">Select one for movie night</p>\n    </div>\n    <div class=\"search-container\">\n      <input\n          type=\"text\"\n          v-model=\"searchKeyword\"\n          @keydown=\"handleKeydown\"\n          placeholder=\"输入电影名 / 导演 / 演员精确搜索️🙂 或者 输入电影描述模糊搜索😶‍🌫\"\n          class=\"search-box\"\n      />\n      <button @click=\"searchByKeyword\" class=\"search-button\">精确搜索</button>\n      <button @click=\"fuzzySearch\" class=\"fuzzy-search-button\">模糊搜索</button>\n    </div>\n    <div class=\"category-search-container\">\n      <button @click=\"fetchAllMovies\" class=\"view-all-button\">查看全部电影😎</button>\n      <button @click=\"goToTagsSearch\" class=\"category-search-button\">通过标签搜索😎</button>\n    </div>\n    <div class=\"recommendation-container\">\n      <!-- 左侧：热度排行榜 (20%宽度) -->\n      <div class=\"recommendation-column left-column\">\n        <div class=\"list-header\">\n          <h3>热度排行榜🔥</h3>\n          <hr class=\"header-line\">\n        </div>\n        <div class=\"top-list-container\">\n          <div v-for=\"(movie, index) in mostViewMovies\" :key=\"'mostview-'+index\"\n               class=\"top-list-item\" @click=\"goToMovieDetail(movie._id)\">\n            <span class=\"rank\">{{ index + 1 }}.</span>\n            <div class=\"movie-info\">\n              <p class=\"movie-title-small\">{{ movie.title }}</p>\n              <p class=\"movie-tags-small\">标签: {{ movie.tags.slice(0, 2).join(', ') }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 中间：推荐电影 -->\n      <div class=\"recommendation-column main-recommendation\">\n        <div class=\"recommendation-header\">\n          <p class=\"header-text\">推荐电影</p>\n          <hr class=\"header-line\">\n        </div>\n        <div class=\"movie-overview-container\">\n          <div v-for=\"movie in movies\" :key=\"movie._id\" class=\"movie-item\" @click=\"goToMovieDetail(movie._id)\">\n            <div class=\"movie-header\">\n              <h2 class=\"movie-title\">{{ movie.title }}</h2>\n              <p class=\"movie-score\">评分: {{ movie.star_mine }} / 10</p>\n            </div>\n            <div class=\"movie-details\">\n              <div class=\"left-info\">\n                <p class=\"movie-actors\">演员: {{ movie.actor_actresses.join(', ') }}</p>\n                <p class=\"movie-tags\">标签: {{ movie.tags.join(', ') }}</p>\n                <p class=\"movie-languages\">语言: {{ movie.languages.join(', ') }}</p>\n              </div>\n              <div class=\"right-info\">\n                <p class=\"movie-release\">上映时间: {{ movie.release_time }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 右侧：每日推荐 -->\n      <div class=\"recommendation-column right-column\">\n        <div class=\"list-header\">\n          <h3>每日推荐✨</h3>\n          <hr class=\"header-line\">\n        </div>\n        <div class=\"top-list-container\">\n          <div v-for=\"(movie, index) in dailyRecommendMovies\" :key=\"'daily-'+index\"\n               class=\"top-list-item\" @click=\"goToMovieDetail(movie._id)\">\n            <span class=\"rank\">{{ index + 1 }}.</span>\n            <div class=\"movie-info\">\n              <p class=\"movie-title-small\">{{ movie.title }}</p>\n              <p class=\"movie-tags-small\">标签: {{ movie.tags.slice(0, 2).join(', ') }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {getSuggestedMovies, searchMovies, getAllMovies, logout, fuzzySearchMovies, getHomeData} from \"@/services/api\";\nimport { mapActions } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      userTitle: '',\n      userName: '',\n      searchKeyword: '',\n      movies: [],\n      mostViewMovies: [],   // 新增：排行榜数据\n      dailyRecommendMovies: [] // 新增：每日推荐数据\n    }\n  },\n  methods: {\n    ...mapActions(['updateMovies']),\n    async logout() {\n      try {\n        await logout();\n        this.$router.push({name: 'Login'});\n      } catch (error) {\n        console.error('登出失败:', error);\n      }\n    },\n    async fetchHomeData(){\n      try {\n        const response = await getHomeData();\n        const homeData = response.data.data;\n        // 前5个是排行榜，后5个是每日推荐\n        this.mostViewMovies = homeData.slice(0, 5);\n        this.dailyRecommendMovies = homeData.slice(5, 10);\n      } catch (error) {\n        console.error('获取主页数据失败:', error);\n      }\n    },\n    async searchByKeyword() {\n      if (!this.searchKeyword) {\n        alert('请输入搜索关键词');\n        return;\n      }\n      try {\n        const response = await searchMovies(this.searchKeyword);\n        const movies = response.data.data;\n        this.updateMovies(movies);\n        this.$router.push({name: 'SearchResults'});\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async fuzzySearch() {\n      if (!this.searchKeyword) {\n        alert('请输入搜索关键词');\n        return;\n      }\n      try{\n        const response=await fuzzySearchMovies(this.searchKeyword);\n        const movies = response.data.data;\n        this.updateMovies(movies);\n        this.$router.push({name: 'SearchResults'});\n      }catch(error){\n        console.error(error);\n      }\n    },\n    async fetchAllMovies() {\n      try {\n        const response = await getAllMovies();\n        console.log(response);\n        const movies = response.data.data;\n        await this.updateMovies(movies);\n        this.$router.push({name: 'SearchResults'});\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    goToTagsSearch() {\n      this.$router.push({name: 'TagsSearch'});\n    },\n    async fetchSuggestedMovies() {\n      try {\n        console.log(\"Fetching suggested movies...\");\n        const response = await getSuggestedMovies();\n        this.movies = response.data.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    goToMovieDetail(_id) {\n      this.$router.push({name: 'MovieDetail', params: {_id}});\n    },\n    handleKeydown(event) {\n      if (event.key === 'Enter') {\n        // this.searchByKeyword();\n        if (confirm('请选择搜索方式：\\n\\n确定 - 精确搜索\\n取消 - 模糊搜索')) {\n          this.searchByKeyword();\n        } else {\n          this.fuzzySearch();\n        }\n      }\n    }\n  },\n  created() {\n      // 从本地存储获取用户信息\n      console.log(\"HomeView created\");\n      const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n      if (userInfo) {\n        this.userTitle = userInfo.title;\n        this.userName=userInfo.nickname;\n      }\n      this.fetchSuggestedMovies();\n      this.fetchHomeData();\n  }\n}\n</script>\n\n<style scoped>\nhtml, body {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n.user-info {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.logout-button {\n  padding: 5px 10px;\n  background-color: #b79292;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.logout-button:hover {\n  background-color: #883333;\n}\n\n\n.home {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 0;\n  padding-top: 0;\n}\n\n.typing-effect {\n  text-align: center;\n  margin-top: 0;\n  padding-top: 0;\n}\n\n.typing-text {\n  font-size: 30px;\n  font-weight: bold;\n  font-family: 'Technic';\n  overflow: hidden;\n  white-space: nowrap;\n  border-right: .15em solid #b06767;\n  max-width: 22.5ch;\n  animation: typing 3.5s steps(40, end), blink-caret .75s step-end infinite;\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n@keyframes typing {\n  from { width: 0 }\n  to { width: 100% }\n}\n\n@keyframes blink-caret {\n  from, to { border-color: transparent }\n  50% { border-color: #b06767; }\n}\n\n.search-container {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  gap: 10px; /* 添加按钮间距 */\n}\n\n.search-box {\n  width: 500px; /* 稍微减小宽度以容纳新按钮 */\n  padding: 10px;\n  font-size: 16px;\n}\n\n.search-button, .fuzzy-search-button {\n  padding: 10px 20px;\n  font-size: 16px;\n  background-color: #b79292;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  white-space: nowrap; /* 防止按钮文字换行 */\n}\n\n.search-button:hover, .fuzzy-search-button:hover {\n  background-color: #883333;\n}\n\n.search-button:hover, .fuzzy-search-button:hover {\n  background-color: #883333;\n}\n\n.fuzzy-search-button {\n  background-color: #b79292; /* 紫色调 */\n}\n\n.fuzzy-search-button:hover {\n  background-color: #883333;\n}\n\n.category-search-container {\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n}\n\n.view-all-button {\n  padding: 20px 30px;\n  font-size: 20px;\n  background-color: #b79292;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-right: 40px;\n}\n\n.view-all-button:hover {\n  background-color: #883333;\n}\n\n.category-search-button {\n  padding: 20px 30px;\n  font-size: 20px;\n  background-color: #b79292;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.category-search-button:hover {\n  background-color: #883333;\n}\n\n.recommendation-header {\n  text-align: center;\n  margin-top: 20px;\n}\n\n.header-text {\n  font-size: 26px;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.header-line {\n  width: 80%;\n  margin: 0 auto;\n  border: none;\n  border-top: 2px solid #b79292;\n}\n\n.movie-overview-container {\n  height: 100%;\n  width: 90%;\n}\n\n.movie-item {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 20px auto;\n  padding: 20px;\n  width: 100%;\n  background-color: #f0f0f0;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  cursor: pointer;\n}\n\n.movie-item:hover {\n  background-color: #e0e0e0;\n}\n\n.movie-header {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  align-items: center;\n}\n\n.movie-title {\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 2px;\n}\n\n.movie-score {\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.movie-details {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.main-recommendation .movie-details {\n  display: flex;\n  flex-wrap: nowrap; /* 防止内部换行 */\n}\n\n.main-recommendation .left-info,\n.main-recommendation .right-info {\n  flex: 1; /* 内部列均分空间 */\n  min-width: 0; /* 允许内容收缩 */\n}\n\n.left-info,\n.right-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.movie-actors,\n.movie-tags,\n.movie-languages {\n  font-size: 14px;\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.movie-release {\n  font-size: 14px;\n  margin-bottom: 5px;\n  text-align: right;\n}\n\n.recommendation-container {\n  display: flex;\n  width: 90%;\n  margin: 30px auto;\n  gap: 20px;\n  align-items: flex-start; /* 确保顶部对齐 */\n}\n\n.recommendation-column {\n  display: flex;\n  flex-direction: column;\n  background-color: #f9f9f9;\n  border-radius: 10px;\n  padding: 15px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  height: 100%; /* 确保高度100% */\n}\n\n.top-list-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.list-header {\n  text-align: center;\n  margin-bottom: 15px;\n  flex-shrink: 0; /* 防止标题被压缩 */\n}\n\n.list-header h3 {\n  font-size: 20px;\n  color: #b06767;\n  margin-bottom: 8px;\n}\n\n.header-line {\n  width: 80%;\n  margin: 0 auto;\n  border: none;\n  border-top: 1px solid #e0e0e0;\n}\n\n.top-list-item:hover {\n  background-color: #f0f0f0;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n}\n\n.rank {\n  font-size: 18px;\n  font-weight: bold;\n  color: #b06767;\n  min-width: 30px;\n  text-align: center;\n  margin-right: 10px;\n}\n\n.movie-info {\n  flex: 1;\n  overflow: hidden;\n}\n\n.movie-title-small {\n  font-weight: bold;\n  margin-bottom: 5px;\n  font-size: 11px; /* 增大字体 */\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.movie-tags-small {\n  font-size: 12px;\n  color: #666;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/* 中间栏样式调整 */\n.main-recommendation .recommendation-header {\n  text-align: center;\n  margin-bottom: 15px;\n  flex-shrink: 0;\n}\n\n.main-recommendation .header-text {\n  font-size: 24px;\n  font-weight: bold;\n  color: #b06767;\n}\n\n.main-recommendation .movie-item {\n  background-color: white;\n  border: 1px solid #eee;\n  border-radius: 8px;\n  padding: 15px;\n  margin-bottom: 15px;\n  transition: all 0.3s;\n}\n\n.main-recommendation .movie-item:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n}\n\n.main-recommendation .movie-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.main-recommendation .movie-title {\n  font-size: 16px;\n  font-weight: bold;\n  color: #333;\n  margin: 0;\n}\n\n.main-recommendation .movie-score {\n  font-size: 14px;\n  font-weight: bold;\n  color: #b06767;\n  margin: 0;\n}\n\n.main-recommendation .movie-details {\n  display: flex;\n  font-size: 14px;\n}\n\n.left-column {\n  flex: 0 0 20%;\n  max-width: 20%;\n}\n\n.main-recommendation {\n  flex: 1;\n  margin: 0 15px;\n  min-width: 0;\n}\n\n.right-column {\n  flex: 0 0 20%;\n  max-width: 20%;\n}\n\n.main-recommendation .right-column {\n  text-align: right;\n}\n\n.main-recommendation .movie-actors,\n.main-recommendation .movie-tags,\n.main-recommendation .movie-languages,\n.main-recommendation .movie-release {\n  font-size: 14px;\n  color: #555;\n}\n\n/* 确保排行榜和每日推荐项不换行 */\n.top-list-item {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  margin: 10px 0;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  background-color: white;\n  border: 1px solid #eee;\n  flex-shrink: 0; /* 防止项被压缩 */\n}\n\n@media (max-width: 1352px) {\n  .recommendation-container {\n    flex-direction: column;\n  }\n\n  .recommendation-column {\n    margin-bottom: 20px;\n    height: auto; /* 小屏幕时高度自适应 */\n  }\n\n  .movie-overview-container {\n    overflow-y: visible; /* 小屏幕时不需要滚动 */\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}